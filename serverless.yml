service:
  name: serverless-udagram-real

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}  # opt can be provided when running the deploy command
  region: ${opt:region, 'us-east-1'}
  
  environment:
    GROUPS_TABLE: Groups-${self:provider.stage} # will go to the provider section then take the stage object
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.GROUPS_TABLE}
        # this one follows the usual ARN structure and uses other objects from the template to fill in variable parts


custom:
  documentation:  
    api:  # not really required, but nice to have
      info:
        version: v1.0.0
        title: Udagram API
        description: Serverless app for image sharing
    models: # this one is required for json payload validation
      - name: GroupRequest
        contentType: application/json
        schema: ${file(models/create-group-request.json)}


functions:
  GetGroups:
    handler: src/lambda/http/getGroups.handler
    events:
      - http:
          method: get
          path: groups
          cors: true

  createGroup:
    handler: src/lambda/http/createGroup.handler
    events:
      - http:
          method: post
          path: groups
          cors: true
          reqValidatorName: RequestBodyValidator
          documentation:
            summary: Create a new group
            description: Create a new group
            requestModels:
              'application/json': GroupRequest  # name of model defined above

resources:
  Resources:

    RequestBodyValidator:
      Type: AWS::ApiGateway::RequestValidator
      Properties:
        Name: 'request-body-validator'
        RestApiId:
          Ref: ApiGatewayRestApi
        ValidateRequestBody: true
        ValidateRequestParameters: false

    GroupsDynamoDBTable:  # CloudFormation will give the identifier + resource type as the name for the resource
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.GROUPS_TABLE}
